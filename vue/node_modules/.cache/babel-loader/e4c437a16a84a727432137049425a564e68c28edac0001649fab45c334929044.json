{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nexport default {\n  name: \"Semester\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入上课学期',\n          trigger: 'blur'\n        }],\n        weeks: [{\n          required: true,\n          message: '请输入周数',\n          trigger: 'blur'\n        }]\n      },\n      ids: [],\n      semesterData: [],\n      curSemester: null\n    };\n  },\n  created() {\n    this.load(1);\n    this.loadCurSemester();\n  },\n  methods: {\n    loadCurSemester() {\n      this.$request.get('/semester/selectCurSemester').then(res => {\n        if (res.code === '200') {\n          this.curSemester = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    updateCurSemester(row) {\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.$confirm('确定设置为当前学期吗？', '设置当前学期', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.put('/semester/updateCurSemester', this.form).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n            this.loadCurSemester();\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/semester/update' : '/semester/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/semester/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/semester/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","weeks","ids","semesterData","curSemester","created","load","loadCurSemester","methods","$request","get","then","res","code","$message","error","msg","updateCurSemester","row","stringify","$confirm","type","response","put","success","catch","handleAdd","handleEdit","save","$refs","formRef","validate","valid","url","id","method","del","delete","handleSelectionChange","rows","map","v","params","list","handleCurrentChange"],"sources":["src/views/manager/Semester.vue"],"sourcesContent":["<template>\r\n  <div>\r\n\r\n    <div class=\"operation\">\r\n      <span slot=\"reference\" style=\"margin-left: auto;\">当前学期：{{ curSemester.name }}</span>\r\n    </div>\r\n\r\n    <div class=\"operation\">\r\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\r\n        <el-table-column prop=\"id\" label=\"序号\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column prop=\"name\" label=\"开课学期\" sortable></el-table-column>\r\n        <el-table-column prop=\"weeks\" label=\"周数\"></el-table-column>\r\n        <el-table-column label=\"操作\" align=\"center\" width=\"300\">\r\n          <template v-slot=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-button v-if=\"scope.row.isCurSemester === 0\" size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\r\n            <el-button v-if=\"scope.row.isCurSemester === 0\" size=\"mini\" type=\"success\" plain @click=\"updateCurSemester(scope.row)\">设置为当前学期</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <el-dialog title=\"学期\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item label=\"开课学期\" prop=\"name\">\r\n          <el-input v-model=\"form.name\" placeholder=\"开课学期\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"周数\" prop=\"weeks\">\r\n          <el-input v-model=\"form.weeks\" placeholder=\"周数\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Semester\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      name: null,\r\n      fromVisible: false,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        name: [\r\n          {required: true, message: '请输入上课学期', trigger: 'blur'},\r\n        ],\r\n        weeks: [\r\n          {required: true, message: '请输入周数', trigger: 'blur'},\r\n        ],\r\n      },\r\n      ids: [],\r\n      semesterData: [],\r\n      curSemester: null\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n    this.loadCurSemester()\r\n  },\r\n  methods: {\r\n    loadCurSemester() {\r\n      this.$request.get('/semester/selectCurSemester').then(res => {\r\n        if (res.code === '200') {\r\n          this.curSemester = res.data\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    updateCurSemester(row) {\r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      this.$confirm('确定设置为当前学期吗？', '设置当前学期', {type: \"warning\"}).then(response => {\r\n        this.$request.put('/semester/updateCurSemester', this.form).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n            this.loadCurSemester()\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleAdd() {   // 新增数据\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request({\r\n            url: this.form.id ? '/semester/update' : '/semester/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/semester/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/semester/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          name: this.name,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>"],"mappings":";AA6DA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAL,IAAA;MACAM,WAAA;MACAC,IAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;QACAb,IAAA,GACA;UAAAc,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,KAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAE,GAAA;MACAC,YAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;IACA,KAAAC,eAAA;EACA;EACAC,OAAA;IACAD,gBAAA;MACA,KAAAE,QAAA,CAAAC,GAAA,gCAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAT,WAAA,GAAAQ,GAAA,CAAA3B,IAAA;QACA;UACA,KAAA6B,QAAA,CAAAC,KAAA,CAAAH,GAAA,CAAAI,GAAA;QACA;MACA;IACA;IACAC,kBAAAC,GAAA;MACA,KAAA3B,IAAA,GAAAE,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAA0B,SAAA,CAAAD,GAAA;MACA,KAAAE,QAAA;QAAAC,IAAA;MAAA,GAAAV,IAAA,CAAAW,QAAA;QACA,KAAAb,QAAA,CAAAc,GAAA,qCAAAhC,IAAA,EAAAoB,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAC,QAAA,CAAAU,OAAA;YACA,KAAAlB,IAAA;YACA,KAAAC,eAAA;UACA;YACA,KAAAO,QAAA,CAAAC,KAAA,CAAAH,GAAA,CAAAI,GAAA;UACA;QACA;MACA,GAAAS,KAAA,QACA;IACA;IACAC,UAAA;MAAA;MACA,KAAAnC,IAAA;MACA,KAAAD,WAAA;IACA;IACAqC,WAAAT,GAAA;MAAA;MACA,KAAA3B,IAAA,GAAAE,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAA0B,SAAA,CAAAD,GAAA;MACA,KAAA5B,WAAA;IACA;IACAsC,KAAA;MAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAvB,QAAA;YACAwB,GAAA,OAAA1C,IAAA,CAAA2C,EAAA;YACAC,MAAA,OAAA5C,IAAA,CAAA2C,EAAA;YACAjD,IAAA,OAAAM;UACA,GAAAoB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cAAA;cACA,KAAAC,QAAA,CAAAU,OAAA;cACA,KAAAlB,IAAA;cACA,KAAAhB,WAAA;YACA;cACA,KAAAwB,QAAA,CAAAC,KAAA,CAAAH,GAAA,CAAAI,GAAA;YACA;UACA;QACA;MACA;IACA;IACAoB,IAAAF,EAAA;MAAA;MACA,KAAAd,QAAA;QAAAC,IAAA;MAAA,GAAAV,IAAA,CAAAW,QAAA;QACA,KAAAb,QAAA,CAAA4B,MAAA,uBAAAH,EAAA,EAAAvB,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAC,QAAA,CAAAU,OAAA;YACA,KAAAlB,IAAA;UACA;YACA,KAAAQ,QAAA,CAAAC,KAAA,CAAAH,GAAA,CAAAI,GAAA;UACA;QACA;MACA,GAAAS,KAAA,QACA;IACA;IACAa,sBAAAC,IAAA;MAAA;MACA,KAAArC,GAAA,GAAAqC,IAAA,CAAAC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAP,EAAA;IACA;IACA5B,KAAAnB,OAAA;MAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAsB,QAAA,CAAAC,GAAA;QACAgC,MAAA;UACAvD,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAJ,IAAA,OAAAA;QACA;MACA,GAAA2B,IAAA,CAAAC,GAAA;QACA,KAAA1B,SAAA,GAAA0B,GAAA,CAAA3B,IAAA,EAAA0D,IAAA;QACA,KAAAtD,KAAA,GAAAuB,GAAA,CAAA3B,IAAA,EAAAI,KAAA;MACA;IACA;IACAuD,oBAAAzD,OAAA;MACA,KAAAmB,IAAA,CAAAnB,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}